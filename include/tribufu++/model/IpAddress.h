/**
 * Tribufu API
 * REST API to access Tribufu services.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: contact@tribufu.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.12.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * IpAddress.h
 *
 *
 */

#ifndef TRIBUFU_MODELS_IpAddress_H_
#define TRIBUFU_MODELS_IpAddress_H_

#include "tribufu++/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace tribufu
{
    namespace models
    {

        class IpAddress : public ModelBase
        {
        public:
            IpAddress();
            virtual ~IpAddress();

            /////////////////////////////////////////////
            /// ModelBase overrides

            void validate() override;

            web::json::value toJson() const override;
            bool fromJson(const web::json::value &json) override;

            void toMultipart(std::shared_ptr<MultipartFormData> multipart,
                             const utility::string_t &namePrefix) const override;
            bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart,
                               const utility::string_t &namePrefix) override;

            /////////////////////////////////////////////
            /// IpAddress members

            utility::string_t getAddress() const;
            bool addressIsSet() const;
            void unsetAddress();
            void setAddress(const utility::string_t &value);

            int32_t getVersion() const;
            bool versionIsSet() const;
            void unsetVersion();
            void setVersion(int32_t value);

            utility::string_t getNetwork() const;
            bool networkIsSet() const;
            void unsetNetwork();
            void setNetwork(const utility::string_t &value);

            bool isReserved() const;
            bool reservedIsSet() const;
            void unsetReserved();
            void setReserved(bool value);

            utility::string_t getAsn() const;
            bool asnIsSet() const;
            void unsetAsn();
            void setAsn(const utility::string_t &value);

            utility::string_t getIsp() const;
            bool ispIsSet() const;
            void unsetIsp();
            void setIsp(const utility::string_t &value);

            utility::string_t getContinent() const;
            bool continentIsSet() const;
            void unsetContinent();
            void setContinent(const utility::string_t &value);

            utility::string_t getCountry() const;
            bool countryIsSet() const;
            void unsetCountry();
            void setCountry(const utility::string_t &value);

            utility::string_t getRegion() const;
            bool regionIsSet() const;
            void unsetRegion();
            void setRegion(const utility::string_t &value);

            utility::string_t getCity() const;
            bool cityIsSet() const;
            void unsetCity();
            void setCity(const utility::string_t &value);

            utility::string_t getPostalCode() const;
            bool postalCodeIsSet() const;
            void unsetPostal_code();
            void setPostalCode(const utility::string_t &value);

            utility::string_t getCallingCode() const;
            bool callingCodeIsSet() const;
            void unsetCalling_code();
            void setCallingCode(const utility::string_t &value);

            utility::string_t getTld() const;
            bool tldIsSet() const;
            void unsetTld();
            void setTld(const utility::string_t &value);

            utility::string_t getLanguage() const;
            bool languageIsSet() const;
            void unsetLanguage();
            void setLanguage(const utility::string_t &value);

            utility::string_t getTimezone() const;
            bool timezoneIsSet() const;
            void unsetTimezone();
            void setTimezone(const utility::string_t &value);

            utility::string_t getCurrency() const;
            bool currencyIsSet() const;
            void unsetCurrency();
            void setCurrency(const utility::string_t &value);

            float getLatitude() const;
            bool latitudeIsSet() const;
            void unsetLatitude();
            void setLatitude(float value);

            float getLongitude() const;
            bool longitudeIsSet() const;
            void unsetLongitude();
            void setLongitude(float value);

        protected:
            utility::string_t m_Address;
            bool m_AddressIsSet;

            int32_t m_Version;
            bool m_VersionIsSet;

            utility::string_t m_Network;
            bool m_NetworkIsSet;

            bool m_Reserved;
            bool m_ReservedIsSet;

            utility::string_t m_Asn;
            bool m_AsnIsSet;

            utility::string_t m_Isp;
            bool m_IspIsSet;

            utility::string_t m_Continent;
            bool m_ContinentIsSet;

            utility::string_t m_Country;
            bool m_CountryIsSet;

            utility::string_t m_Region;
            bool m_RegionIsSet;

            utility::string_t m_City;
            bool m_CityIsSet;

            utility::string_t m_Postal_code;
            bool m_Postal_codeIsSet;

            utility::string_t m_Calling_code;
            bool m_Calling_codeIsSet;

            utility::string_t m_Tld;
            bool m_TldIsSet;

            utility::string_t m_Language;
            bool m_LanguageIsSet;

            utility::string_t m_Timezone;
            bool m_TimezoneIsSet;

            utility::string_t m_Currency;
            bool m_CurrencyIsSet;

            float m_Latitude;
            bool m_LatitudeIsSet;

            float m_Longitude;
            bool m_LongitudeIsSet;
        };

    }
}

#endif /* TRIBUFU_MODELS_IpAddress_H_ */
