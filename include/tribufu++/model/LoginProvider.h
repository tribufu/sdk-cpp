/**
 * Tribufu API
 * REST API to access Tribufu services.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: contact@tribufu.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.14.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * LoginProvider.h
 *
 *
 */

#ifndef TRIBUFU_MODELS_LoginProvider_H_
#define TRIBUFU_MODELS_LoginProvider_H_

#include "tribufu++/ModelBase.h"

namespace tribufu
{
    namespace models
    {

        class LoginProvider : public ModelBase
        {
        public:
            LoginProvider();
            LoginProvider(utility::string_t str);
            operator utility::string_t() const
            {
                return enumToStrMap.at(getValue());
            }

            virtual ~LoginProvider();

            /////////////////////////////////////////////
            /// ModelBase overrides

            void validate() override;

            web::json::value toJson() const override;
            bool fromJson(const web::json::value &json) override;

            void toMultipart(std::shared_ptr<MultipartFormData> multipart,
                             const utility::string_t &namePrefix) const override;
            bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart,
                               const utility::string_t &namePrefix) override;

            enum class eLoginProvider
            {
                LoginProvider_STEAM,
                LoginProvider_EPIC,
                LoginProvider_DISCORD,
                LoginProvider_MICROSOFT,
                LoginProvider_PLAYSTATION,
                LoginProvider_GOOGLE,
                LoginProvider_APPLE,
            };

            eLoginProvider getValue() const;
            void setValue(eLoginProvider const value);

        protected:
            eLoginProvider m_value;
            std::map<eLoginProvider, utility::string_t> enumToStrMap = {
                {eLoginProvider::LoginProvider_STEAM, "STEAM"},
                {eLoginProvider::LoginProvider_EPIC, "EPIC"},
                {eLoginProvider::LoginProvider_DISCORD, "DISCORD"},
                {eLoginProvider::LoginProvider_MICROSOFT, "MICROSOFT"},
                {eLoginProvider::LoginProvider_PLAYSTATION, "PLAYSTATION"},
                {eLoginProvider::LoginProvider_GOOGLE, "GOOGLE"},
                {eLoginProvider::LoginProvider_APPLE, "APPLE"}};
            std::map<utility::string_t, eLoginProvider> strToEnumMap = {
                {"STEAM", eLoginProvider::LoginProvider_STEAM},
                {"EPIC", eLoginProvider::LoginProvider_EPIC},
                {"DISCORD", eLoginProvider::LoginProvider_DISCORD},
                {"MICROSOFT", eLoginProvider::LoginProvider_MICROSOFT},
                {"PLAYSTATION", eLoginProvider::LoginProvider_PLAYSTATION},
                {"GOOGLE", eLoginProvider::LoginProvider_GOOGLE},
                {"APPLE", eLoginProvider::LoginProvider_APPLE}};
        };

    }
}

#endif /* TRIBUFU_MODELS_LoginProvider_H_ */
