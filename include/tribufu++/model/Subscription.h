/**
 * Tribufu API
 * REST API to access Tribufu services.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: contact@tribufu.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.14.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Subscription.h
 *
 *
 */

#ifndef TRIBUFU_MODELS_Subscription_H_
#define TRIBUFU_MODELS_Subscription_H_

#include "tribufu++/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <map>

namespace tribufu
{
    namespace models
    {

        class Subscription : public ModelBase
        {
        public:
            Subscription();
            virtual ~Subscription();

            /////////////////////////////////////////////
            /// ModelBase overrides

            void validate() override;

            web::json::value toJson() const override;
            bool fromJson(const web::json::value &json) override;

            void toMultipart(std::shared_ptr<MultipartFormData> multipart,
                             const utility::string_t &namePrefix) const override;
            bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart,
                               const utility::string_t &namePrefix) override;

            /////////////////////////////////////////////
            /// Subscription members

            utility::string_t getId() const;
            bool idIsSet() const;
            void unsetId();
            void setId(const utility::string_t &value);

            utility::string_t getName() const;
            bool nameIsSet() const;
            void unsetName();
            void setName(const utility::string_t &value);

            utility::string_t getDescription() const;
            bool descriptionIsSet() const;
            void unsetDescription();
            void setDescription(const utility::string_t &value);

            utility::string_t getImageUrl() const;
            bool imageUrlIsSet() const;
            void unsetImage_url();
            void setImageUrl(const utility::string_t &value);

            std::map<utility::string_t, double> getPrices() const;
            bool pricesIsSet() const;
            void unsetPrices();
            void setPrices(std::map<utility::string_t, double> value);

            utility::datetime getCreated() const;
            bool createdIsSet() const;
            void unsetCreated();
            void setCreated(const utility::datetime &value);

            utility::datetime getUpdated() const;
            bool updatedIsSet() const;
            void unsetUpdated();
            void setUpdated(const utility::datetime &value);

        protected:
            utility::string_t m_Id;
            bool m_IdIsSet;

            utility::string_t m_Name;
            bool m_NameIsSet;

            utility::string_t m_Description;
            bool m_DescriptionIsSet;

            utility::string_t m_Image_url;
            bool m_Image_urlIsSet;

            std::map<utility::string_t, double> m_Prices;
            bool m_PricesIsSet;

            utility::datetime m_Created;
            bool m_CreatedIsSet;

            utility::datetime m_Updated;
            bool m_UpdatedIsSet;
        };

    }
}

#endif /* TRIBUFU_MODELS_Subscription_H_ */
