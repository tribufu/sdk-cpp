/**
 * Tribufu API
 * REST API to access Tribufu services.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: contact@tribufu.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.14.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Account.h
 *
 *
 */

#ifndef TRIBUFU_MODELS_Account_H_
#define TRIBUFU_MODELS_Account_H_

#include <stdexcept>

#include "tribufu++/ModelBase.h"

#include "tribufu++/AnyType.h"
#include "tribufu++/model/LoginProvider.h"
#include <cpprest/details/basic_types.h>

namespace tribufu
{
    namespace models
    {

        class Account : public ModelBase
        {
        public:
            Account();
            virtual ~Account();

            /////////////////////////////////////////////
            /// ModelBase overrides

            void validate() override;

            web::json::value toJson() const override;
            bool fromJson(const web::json::value &json) override;

            void toMultipart(std::shared_ptr<MultipartFormData> multipart,
                             const utility::string_t &namePrefix) const override;
            bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart,
                               const utility::string_t &namePrefix) override;

            /////////////////////////////////////////////
            /// Account members

            utility::string_t getId() const;
            bool idIsSet() const;
            void unsetId();
            void setId(const utility::string_t &value);

            utility::string_t getName() const;
            bool nameIsSet() const;
            void unsetName();
            void setName(const utility::string_t &value);

            std::shared_ptr<LoginProvider> getProvider() const;
            bool providerIsSet() const;
            void unsetProvider();
            void setProvider(const std::shared_ptr<LoginProvider> &value);

            utility::string_t getUserId() const;
            bool userIdIsSet() const;
            void unsetUser_id();
            void setUserId(const utility::string_t &value);

            bool isAuthorized() const;
            bool authorizedIsSet() const;
            void unsetAuthorized();
            void setAuthorized(bool value);

            std::shared_ptr<AnyType> getFields() const;
            bool fieldsIsSet() const;
            void unsetFields();
            void setFields(const std::shared_ptr<AnyType> &value);

            utility::datetime getCreated() const;
            bool createdIsSet() const;
            void unsetCreated();
            void setCreated(const utility::datetime &value);

            utility::datetime getUpdated() const;
            bool updatedIsSet() const;
            void unsetUpdated();
            void setUpdated(const utility::datetime &value);

        protected:
            utility::string_t m_Id;
            bool m_IdIsSet;

            utility::string_t m_Name;
            bool m_NameIsSet;

            std::shared_ptr<LoginProvider> m_Provider;
            bool m_ProviderIsSet;

            utility::string_t m_User_id;
            bool m_User_idIsSet;

            bool m_Authorized;
            bool m_AuthorizedIsSet;

            std::shared_ptr<AnyType> m_Fields;
            bool m_FieldsIsSet;

            utility::datetime m_Created;
            bool m_CreatedIsSet;

            utility::datetime m_Updated;
            bool m_UpdatedIsSet;
        };

    }
}

#endif /* TRIBUFU_MODELS_Account_H_ */
